
# Introduction

```{r index-1, echo=FALSE}
is_on_ghactions = identical(Sys.getenv("GITHUB_ACTIONS"), "true")
is_online = curl::has_internet()
is_html = knitr::is_html_output()
```

This is site contains ideas, code and an outline of a yet-to-be written book on *Geocomputation with Python*.

## Motivations

This book, tentatively called Geocomputation with Python ('geocompy'), is motivated by the need for an introductory yet rigorous and up-to-date resource on working with geographic data in Python that demonstrates basic data structures and describes code for handling vector *and* raster datasets in an integrated way.
There are many resources on Python packages for geographic research and various applications but, to the best of our knowledge, no other resource brings together the following features into a single home:

1. Small introductory textbook focusses on doing basic operations well
2. Integration of vector and raster datasets in the same book, and within each section
3. Clear explanation of the code and exercises to maximise learning for newcomers
4. Provision of lucid example datasets and meaningful operations to illustrate the applied nature of geographic research

The book aims to supplement other resources in the ecosystem, as highlighted by comparison with the book's scope with existing and in-progress works:

- [pythongis.org](https://pythongis.org/) (at an early stage of development) seeks to provide a general introduction to 'GIS in Python', with parts focussing on Python essentials, using Python with GIS, and case studies. Compared with pythongis.org, geocmpy has a relatively narrow scope (1) and a greater focus on raster-vecter interoperability
- [geographicdata.science](https://geographicdata.science/book/intro.html) is an ambitious project with chapters dedicated to advanced topics, with Chapter 4 on [Spatial Weights](https://geographicdata.science/book/notebooks/04_spatial_weights.html) getting into complex topics relatively early, for example. Geocompy would be shorter, simpler and more introductory, and cover raster and vector data with equal importance (1 to 4)

## Reproducing this book
<!-- Would this live better in the README (RL 2022-02-16) -->

An important aspect of scientific research and 'citizen science' that is participatory is reproducibility of results.
We aim to make this web version of the book as easy as possible. See the source code for details (work in progress).

```{bash, eval=FALSE, echo=FALSE}
# Todo: improve these instructions before showing these system commands
# To reproduce the book you need Python and and geo packages installed
# Install them through a framework such as Conda (recommended) or pip3 as follows:
pip3 install geopandas rasterio rioxarray jupyter matplotlib netcdf4 h5netcdf 
# install quarto...
quarto preview

# Run the book code on Docker:
docker run --rm -d -p 8784:8787 -e DISABLE_AUTH=TRUE --name geocompy \
  -v $(pwd):/home/rstudio/pytest geocompr/geocompr:python
firefox localhost:8784 # or your browser of choice
```


